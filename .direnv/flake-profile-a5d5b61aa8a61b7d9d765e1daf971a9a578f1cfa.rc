unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
BASH='/noshell'
HOSTTYPE='x86_64'
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LINENO='76'
MACHTYPE='x86_64-pc-linux-gnu'
NIX_BUILD_CORES='0'
export NIX_BUILD_CORES
NIX_STORE='/nix/store'
export NIX_STORE
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/path-not-set'
export PATH
PS4='+ '
builder='/nix/store/pk3kkaafln68gzxawk57qp9m5h5285va-bash-interactive-5.2-p15/bin/bash'
export builder
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
name='devenv-shell-env'
export name
out='/home/nixos/Projects/MagneticSensorTracking/outputs/out'
export out
outputs='out'
shellHook='# Remove all the unnecessary noise that is set by the build env
unset NIX_BUILD_TOP NIX_BUILD_CORES NIX_STORE
unset TEMP TEMPDIR TMP TMPDIR
# $name variable is preserved to keep it compatible with pure shell https://github.com/sindresorhus/pure/blob/47c0c881f0e7cfdb5eaccd335f52ad17b897c060/pure.zsh#L235
unset builder out shellHook stdenv system
# Flakes stuff
unset dontAddDisableDepTrack outputs

# For `nix develop`. We get /noshell on Linux and /sbin/nologin on macOS.
if [[ "$SHELL" == "/noshell" || "$SHELL" == "/sbin/nologin" ]]; then
  export SHELL=/nix/store/pk3kkaafln68gzxawk57qp9m5h5285va-bash-interactive-5.2-p15/bin/bash
fi

# https://github.com/numtide/devshell/issues/158
PATH=${PATH#/path-not-set:}

export DEVENV_PROFILE=/nix/store/h8ilfgbqzml9f29qqz712y3yf1qhhy09-devenv-profile

# add installed packages to PATH
export PATH="$DEVENV_PROFILE/bin:$PATH"

# prepend common compilation lookup paths
export PKG_CONFIG_PATH="$DEVENV_PROFILE/lib/pkgconfig:${PKG_CONFIG_PATH-}"
export LD_LIBRARY_PATH="$DEVENV_PROFILE/lib:${LD_LIBRARY_PATH-}"
export LIBRARY_PATH="$DEVENV_PROFILE/lib:${LIBRARY_PATH-}"
export C_INCLUDE_PATH="$DEVENV_PROFILE/include:${C_INCLUDE_PATH-}"

# these provide shell completions / default config options
export XDG_DATA_DIRS="$DEVENV_PROFILE/share:${XDG_DATA_DIRS-}"
export XDG_CONFIG_DIRS="$DEVENV_PROFILE/etc/xdg:${XDG_CONFIG_DIRS-}"

export DEVENV_DOTFILE='\''/home/nixos/Projects/MagneticSensorTracking/.devenv'\''
export DEVENV_PROFILE='\''/nix/store/h8ilfgbqzml9f29qqz712y3yf1qhhy09-devenv-profile'\''
export DEVENV_ROOT='\''/home/nixos/Projects/MagneticSensorTracking'\''
export DEVENV_STATE='\''/home/nixos/Projects/MagneticSensorTracking/.devenv/state'\''
export JUPYTER_CONFIG_DIR='\''/home/nixos/Projects/MagneticSensorTracking/.devenv/state/venv/etc/jupyter'\''
export JUPYTER_PATH='\''/home/nixos/Projects/MagneticSensorTracking/.devenv/state/venv/share/jupyter'\''
export PYTHONPATH='\''/nix/store/h8ilfgbqzml9f29qqz712y3yf1qhhy09-devenv-profile/lib/python3.10/site-packages'\''

source /nix/store/3fs18npc1yw756bcrlgqdm053facqfn3-init-venv.sh

source /nix/store/2w4pk239ikynq65s658ri0m6iazw21lw-init-poetry.sh

export LD_LIBRARY_PATH=/usr/lib/wsl/lib:$LD_LIBRARY_PATH
export CUDA_PATH=/nix/store/814j4nijg4b7pa2gdxhqh8c72arlbn3h-cudatoolkit-11.7.0
export CUBLAS_LIB=$CUDA_PATH/lib64/libcublas.so

export PS1="\[\e[0;34m\](devenv)\[\e[0m\] ${PS1-}"

# set path to locales on non-NixOS Linux hosts
if [ -z "${LOCALE_ARCHIVE-}" ]; then
  export LOCALE_ARCHIVE=/nix/store/7n67sxgrwchfjpwjady8rlmp350jzi3n-glibc-locales-2.37-8/lib/locale/locale-archive
fi


# note what environments are active, but make sure we don'\''t repeat them
if [[ ! "${DIRENV_ACTIVE-}" =~ (^|:)"$PWD"(:|$) ]]; then
  export DIRENV_ACTIVE="$PWD:${DIRENV_ACTIVE-}"
fi

# devenv helper
if [ ! type -p direnv &>/dev/null && -f .envrc ]; then
  echo "You have .envrc but direnv command is not installed."
  echo "Please install direnv: https://direnv.net/docs/installation.html"
fi

mkdir -p .devenv
rm -f .devenv/profile
ln -s /nix/store/h8ilfgbqzml9f29qqz712y3yf1qhhy09-devenv-profile .devenv/profile

'
export shellHook
stdenv='/nix/store/ac5cz6ra06xqymjqr02zjr0ai296ihcq-naked-stdenv'
export stdenv
system='x86_64-linux'
export system
runHook ()
{
 
    eval "$shellHook";
    unset runHook
}
PATH="$PATH:$nix_saved_PATH"
XDG_DATA_DIRS="$XDG_DATA_DIRS:$nix_saved_XDG_DATA_DIRS"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "$shellHook"
